{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","click","id","shuffle","alt","name","src","image","Wrapper","children","currentScore","highScore","styles","navbarStyle","background","color","width","height","navElements","justifyContent","fontSize","App","state","friends","clicker","map","friend","clicked","alert","gameOver","setState","sort","a","b","Math","random","style","this","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qzEAceA,MAXf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBAAgBC,QAAW,WAAOF,EAAMG,MAAMH,EAAMI,IAAKJ,EAAMK,YAC5E,yBAAKC,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,W,MCA1BC,MAJf,SAAiBV,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMW,W,OCErCC,G,MAAe,GACfC,EAAY,EACVC,EAAS,CACbC,YAAa,CACXC,WAAY,YACZC,MAAO,QACPC,MAAO,OACPC,OAAQ,OAEVC,YAAa,CACXC,eAAgB,SAChBH,MAAO,OACPI,SAAU,SAqFCC,E,2MA9EbC,MAAQ,CACNC,W,EAGFC,QAAU,SAACtB,GACT,IAAMqB,EAAU,EAAKD,MAAMC,QAAQE,KAAI,SAAAC,GAWrC,OAVIA,EAAOxB,KAAOA,IAAyB,IAAnBwB,EAAOC,SAC7BD,EAAOC,SAAU,EACjBjB,KACSgB,EAAOxB,KAAOA,IAAyB,IAAnBwB,EAAOC,UACpCC,MAAM,YACFlB,EAAeC,IACjBA,EAAYD,GAEd,EAAKmB,YAEAH,KAGT,EAAKI,SAAS,CAAEP,a,EAGlBpB,QAAU,WACR,EAAK2B,SAAS,CACZP,QAAS,EAAKD,MAAMC,QAAQQ,MAAK,SAAUC,EAAEC,GAC3C,MAAO,GAAMC,KAAKC,e,EAKxBN,SAAW,WACT,IAAMN,EAAU,EAAKD,MAAMC,QAAQE,KAAI,SAAAC,GAErC,OADAA,EAAOC,SAAU,EACVD,KAEThB,EAAe,EACf,EAAKoB,SAAS,CAAEP,a,wEAIR,IAAD,OACP,OACE,kBAAC,EAAD,KACA,yBAAKxB,UAAU,MAAMqC,MAAOxB,EAAOC,aACjC,yBAAKd,UAAU,SAAUqC,MAAOxB,EAAOM,aAIrC,yBAAKnB,UAAU,YACb,yDAEF,yBAAKA,UAAU,YACb,qCAAWW,EAAX,kBAAwCC,MAM5C0B,KAAKf,MAAMC,QAAQE,KAAI,SAACC,GACtB,OACE,kBAAC,EAAD,CACEY,IAAKZ,EAAOxB,GACZG,KAAMqB,EAAOrB,KACbE,MAAOmB,EAAOnB,MACdN,MAAO,EAAKuB,QACZG,QAASD,EAAOC,QAChBxB,QAAS,EAAKA,QACdD,GAAIwB,EAAOxB,a,GArEPqC,IAAMC,W,MClBxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7fce1b63.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\" onClick = {() => {props.click(props.id); props.shuffle()}}>\n        <img alt={props.name} src={props.image} />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nlet currentScore = 0;\nlet highScore = 0;\nconst styles = {\n  navbarStyle :{\n    background: \"lightblue\",\n    color: \"black\",\n    width: \"100%\",\n    height: \"20%\"\n  },\n  navElements :{\n    justifyContent :\"center\",\n    width: \"100%\",\n    fontSize: \"32px\"\n  }\n}\n\n\nclass App extends React.Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  clicker = (id) => {\n    const friends = this.state.friends.map(friend => {\n      if (friend.id === id && friend.clicked === true){\n        friend.clicked = true;\n        currentScore++;\n      } else if (friend.id === id && friend.clicked === true){\n        alert(\"you lose\");\n        if (currentScore > highScore){\n          highScore = currentScore\n        }\n        this.gameOver()\n      }\n      return friend\n      \n    })\n    this.setState({ friends })\n  }\n\n  shuffle = () => {\n    this.setState({\n      friends :this.state.friends.sort(function (a,b){ \n        return 0.5 - Math.random();\n      })\n    })\n  }\n\n  gameOver = () => {\n    const friends = this.state.friends.map(friend => {\n      friend.clicked = false;\n      return friend\n    })\n    currentScore = 0;\n    this.setState({ friends })\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n      <div className=\"row\" style={styles.navbarStyle}>\n        <nav className=\"navbar\"  style={styles.navElements}>\n          {/* <div className=\"col-md-4\">\n            <a href=\"/\">Clicky Game</a>\n          </div> */}\n          <div className=\"col-md-4\">\n            <p>Click on an image to play</p>\n          </div>\n          <div className=\"col-md-4\">\n            <p>score: {currentScore} | high score: {highScore}</p>\n          </div>\n        </nav>\n      </div>\n      {/* <Header /> */}\n      {\n        this.state.friends.map((friend) => {\n          return (\n            <FriendCard\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n              click={this.clicker}\n              clicked={friend.clicked}\n              shuffle={this.shuffle}\n              id={friend.id}\n            />\n          )\n        })\n      }\n\n    </Wrapper >\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}